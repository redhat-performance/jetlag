---
# wait-hosts-discovered tasks

- name: RWN - Create list of nodes to be discovered
  set_fact:
    inventory_nodes: "{{ groups['controlplane'] }}"
  when: cluster_type == "rwn"

- name: BM - Create list of nodes to be discovered
  set_fact:
    inventory_nodes: "{{ groups['controlplane'] + groups['worker'] }}"
  when: cluster_type == "bm"

# Need to add check here for all nodes to be in state (pending-for-input vs discovering and not just length of hosts to be discovered)
- name: Wait for 40 min for nodes to be discovered
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v1/clusters/{{ ai_cluster_id }}"
    method: GET
    status_code: [200, 201]
    return_content: true
  register: cluster
  until: cluster.json.hosts | length == inventory_nodes | length
  retries: 40
  delay: 60

  # Until the above race condition is fixed, allow some time for discovery to complete
- name: Sleep to allow full discovery
  pause:
    minutes: 2

- name: Set hostname and role for discovered hosts
  include_tasks: set_hostname_role.yml
  with_items:
    - "{{ cluster.json.hosts }}"
  loop_control:
    loop_var: discovered_host

- name: Provide API Virtual IP to cluster
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v1/clusters/{{ ai_cluster_id }}"
    method: PATCH
    status_code: [201]
    return_content: true
    body_format: json
    body: {
        "cluster_network_host_prefix": "{{ cluster_network_host_prefix }}",
        "vip_dhcp_allocation": "{{ vip_dhcp_allocation }}",
        "ingress_vip": "{{ controlplane_network_ingress }}",
        "api_vip": "{{ controlplane_network_api }}"
    }

- name: Wait for cluster to be ready
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v1/clusters/{{ ai_cluster_id }}"
    method: GET
    status_code: [200, 201]
    return_content: true
  register: cluster
  until: "cluster.json.status == 'ready'"
  retries: 240
  delay: 5

- name: Set install disk for control-plane nodes
  include_tasks: set_node_install_disk.yml
  vars:
    bm_control_plane_install_disk: /dev/sda
  loop: "{{ cluster.json.hosts | selectattr('role', 'eq', 'master') }}"
  loop_control:
    loop_var: bm_node

- name: Wait for cluster to be ready for install
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v1/clusters/{{ ai_cluster_id }}"
    method: GET
    status_code: [200, 201]
    return_content: true
  register: cluster
  until: "cluster.json.status == 'ready'"
  retries: 240
  delay: 5
