---
# wait-hosts-discovered tasks

- name: MNO - Create list of nodes to be discovered
  set_fact:
    inventory_nodes: "{{ groups['controlplane'] + groups['worker'] }}"
  when: cluster_type == "mno"

- name: SNO - Create list of nodes to be discovered
  set_fact:
    inventory_nodes: "{{ groups['sno'] }}"
  when: cluster_type == "sno"

- name: Assert that inventory_nodes is defined
  ansible.builtin.assert:
    that: inventory_nodes is defined
    quiet: true
    fail_msg: "Unsupported cluster type {{ cluster_type }}"

- name: Wait up to 40 min for nodes to be discovered
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v2/clusters/{{ ai_cluster_id }}"
    method: GET
    status_code: [200, 201]
    return_content: true
  register: cluster
  until: cluster.json.hosts | length == inventory_nodes | length
  retries: 40
  delay: 60

- name: Wait up to 5 minutes until hosts no longer in discovering status
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v2/infra-envs/{{ ai_infraenv_id }}/hosts/{{ item.id }}"
    method: GET
    status_code: [200, 201]
    return_content: true
  loop: "{{ cluster.json.hosts | list }}"
  loop_control:
    label: "{{ item.id }}"
  register: host_data
  until: host_data.json.status != "discovering"
  retries: 30
  delay: 10

- name: Get cluster data for host and role setting
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v2/clusters/{{ ai_cluster_id }}"
    method: GET
    status_code: [200, 201]
    return_content: true
  register: cluster

- name: Set hostname and role for discovered hosts
  include_tasks: set_hostname_role.yml
  loop: "{{ cluster.json.hosts }}"
  loop_control:
    loop_var: discovered_host
    label: "{{ discovered_host.id }}"

- name: Wait for cluster to be ready
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v2/clusters/{{ ai_cluster_id }}"
    method: GET
    status_code: [200, 201]
    return_content: true
  register: cluster
  until: "cluster.json.status == 'ready'"
  retries: 240
  delay: 5

- name: Set install disk for control-plane nodes
  include_tasks: set_node_install_disk.yml
  loop: "{{ cluster.json.hosts | selectattr('role', 'eq', 'master') | list }}"
  loop_control:
    loop_var: mno_node
    label: "{{ mno_node.requested_hostname }}"

- name: Set install disk for worker nodes
  include_tasks: set_node_install_disk.yml
  loop: "{{ cluster.json.hosts | selectattr('role', 'eq', 'worker') | list }}"
  loop_control:
    loop_var: mno_node
    label: "{{ mno_node.requested_hostname }}"


- name: Wait for cluster to be ready for install
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v2/clusters/{{ ai_cluster_id }}"
    method: GET
    status_code: [200, 201]
    return_content: true
  register: cluster
  until: "cluster.json.status == 'ready'"
  retries: 240
  delay: 5
