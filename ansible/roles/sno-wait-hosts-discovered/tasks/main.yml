---
# sno-wait-hosts-discovered tasks

- name: Wait for the SNO node to be discovered
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v2/clusters/{{ ai_cluster_id }}"
    method: GET
    status_code: [200, 201]
    return_content: true
  register: cluster
  until: cluster.json.hosts | length == 1
  retries: 20
  delay: 60

# Until the above race condition is fixed, allow some time for discovery to complete
- name: Sleep to allow full discovery
  pause:
    minutes: 2

- name: Set hostname
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v2/infra-envs/{{ ai_infraenv_id }}/hosts/{{ cluster.json.hosts[0].id }}"
    method: PATCH
    body_format: json
    status_code: [201]
    return_content: true
    body: {
        "host_name": "{{ groups['sno'][0] }}",
        "host_role": "master"
    }
  no_log: true

- name: Patch cluster network settings
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v2/clusters/{{ ai_cluster_id }}"
    method: PATCH
    status_code: [201]
    return_content: true
    body_format: json
    body: {
        "cluster_network_cidr": "{{ cluster_network_cidr }}",
        "cluster_network_host_prefix": "{{ cluster_network_host_prefix }}",
        "service_network_cidr": "{{ service_network_cidr }}",
        "cluster_networks":  [
           {
             "cidr": "{{ cluster_network_cidr }}",
             "cluster_id": "{{ ai_cluster_id }}",
             "host_prefix": "{{ cluster_network_host_prefix }}"
           }
         ],
         "service_networks":  [
           {
             "cidr": "{{ service_network_cidr }}",
             "cluster_id": "{{ ai_cluster_id }}",
           }
         ]
    }

- name: Wait for SNO to be ready
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v2/clusters/{{ ai_cluster_id }}"
    method: GET
    status_code: [200, 201]
    return_content: true
  register: cluster
  until: "cluster.json.status == 'ready'"
  retries: 240
  delay: 5

- name: Set install disk per SNO cluster
  include_tasks: set_install_disk.yml

- name: Wait for SNO to be ready for install
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v2/clusters/{{ ai_cluster_id }}"
    method: GET
    status_code: [200, 201]
    return_content: true
  register: cluster
  until: "cluster.json.status == 'ready'"
  retries: 240
  delay: 5
