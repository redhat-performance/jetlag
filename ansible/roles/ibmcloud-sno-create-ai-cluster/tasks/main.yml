---
# ibmcloud-sno-create-ai-cluster tasks

- name: Create each SNO and infra-env
  include_role:
    name: sno-create-ai-cluster
    tasks_from: create_individual_sno.yml
  vars:
    use_bastion_registry: false
  loop: "{{ groups['sno'][:1] }}"

# - debug:
#     msg: "{{ ai_cluster_ids }}"

- name: Update machine CIDR
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v2/clusters/{{ ai_cluster_ids[item].cluster_id }}"
    method: PATCH
    body_format: json
    status_code: [201]
    return_content: true
    body: {
        "machine_network_cidr": "{{ private_network_cidr }}"
    }
  with_items: "{{ ai_cluster_ids }}"

- name: Add entries in /etc/hosts
  blockinfile:
    path: "/etc/hosts"
    backup: true
    block: |
      {{ hostvars[item].private_address }} api.{{ hostvars[item].inventory_hostname }}.{{ base_dns_name }}
      {{ hostvars[item].private_address }} api-int.{{ hostvars[item].inventory_hostname }}.{{ base_dns_name }}
      {% for route in etc_hosts_ingress_routes %}
      {{ hostvars[item].private_address }} {{ route }}.apps.{{ hostvars[item].inventory_hostname }}.{{ base_dns_name }}
      {% endfor %}
    insertafter: "EOF"
    marker: "# {mark} {{ hostvars[item].inventory_hostname }} SNO CLUSTER MANAGED BLOCK"
  loop: "{{ groups['sno'][:1] }}"

- name: Restart dnsmasq after /etc/hosts update
  systemd:
    state: restarted
    name: dnsmasq
  when: controlplane_bastion_as_dns

- name: Include custom manifests
  include_tasks: 01_manifest_task.yml
  with_items: "{{ ai_cluster_ids }}"
  loop_control:
    loop_var: outer_item
