---
# generate-livecd tasks

- name: Add 1st controlplane node directly to inventory via proxy
  add_host:
    name: "controlplane0"
    group: controlplane_ssh
    ansible_host: "{{ hostvars[groups['controlplane'][0]].ip }}"
    ansible_ssh_private_key_file: "{{ ssh_private_key_file }}"
    ansible_user: "core"
    ansible_ssh_common_args: |-
      -o ControlMaster=no -o ControlPersist=no -o ProxyCommand='ssh -W %h:%p root@{{ inventory_hostname }}'

# curl -H "Accept: application/vnd.coreos.ignition+json; version=3.2.0" -k https://localhost:22623/config/worker
- name: Get worker ignition config
  uri:
    url: https://localhost:22623/config/worker
    headers:
      Accept: application/vnd.coreos.ignition+json; version=3.2.0
    return_content: true
    validate_certs: false
  delegate_to: "{{ groups['controlplane_ssh'][0] }}"
  register: worker_ignition

- name: Dump worker ignition config to bastion cluster config directory
  copy:
    dest: "{{ bastion_cluster_config_dir }}/livecd/worker.ign"
    content: "{{ worker_ignition.content }}"

- name: Download the rhcos image
  get_url:
    url: "{{ rhcos_image }}"
    dest: "{{ bastion_cluster_config_dir }}/livecd/{{ rhcos_image | basename }}"

- name: Place templated configuration items
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - src: networks.csv.j2
      dest: "{{ bastion_cluster_config_dir }}/livecd/networks.csv"
    - src: firstboot.sh.j2
      dest: "{{ bastion_cluster_config_dir }}/livecd/firstboot.sh"
    - src: iso.ign.template.j2
      dest: "{{ bastion_cluster_config_dir }}/livecd/iso.ign"

- name: Remove old LiveCD
  file:
    path: "{{ bastion_cluster_config_dir }}/livecd/rwn-worker.iso"
    state: absent

- name: Create LiveCD
  shell: |
    podman run --privileged --rm --env-host -v /dev:/dev -v /run/udev:/run/udev -v {{ bastion_cluster_config_dir }}/livecd:/data -w /data quay.io/coreos/coreos-installer:release iso ignition embed -fi iso.ign -o /data/rwn-worker.iso {{ rhcos_image | basename }}

- name: Copy live iso file to http_store
  copy:
    src: "{{ bastion_cluster_config_dir }}/livecd/rwn-worker.iso"
    dest: "{{ http_store_path }}/data/rwn-worker.iso"
    remote_src: true
