---
# bastion-assisted-installer tasks

# Read the version json off the bastion machine
- name: Obtain ocp_version data for assisted-installer without disconnected registry
  slurp:
    src: "{{ ocp_version_path }}/assisted_service_openshift_version.json"
  register: slurped_ai_ocp_version
  when: not (use_disconnected_registry | default(false))

- name: Obtain os_images data for assisted-installer without disconnected registry
  slurp:
    src: "{{ ocp_version_path }}/assisted_service_os_images.json"
  register: slurped_ai_os_images
  when: not (use_disconnected_registry | default(false))

- name: Obtain release_images data for assisted-installer without disconnected registry
  slurp:
    src: "{{ ocp_version_path }}/assisted_service_release_images.json"
  register: slurped_ai_release_images
  when: not (use_disconnected_registry | default(false))

- name: Obtain ocp_version data for assisted-installer with disconnected registry
  slurp:
    src: "{{ ocp_version_path }}/assisted_service_openshift_version-disconnected.json"
  register: slurped_ai_ocp_version_disconnected
  when: use_disconnected_registry | default(false)

- name: Obtain os_images data for assisted-installer with disconnected registry
  slurp:
    src: "{{ ocp_version_path }}/assisted_service_os_images-disconnected.json"
  register: slurped_ai_os_images_disconnected
  when: use_disconnected_registry | default(false)

- name: Obtain release_images data for assisted-installer with disconnected registry
  slurp:
    src: "{{ ocp_version_path }}/assisted_service_release_images-disconnected.json"
  register: slurped_ai_release_images_disconnected
  when: use_disconnected_registry | default(false)

- name: Ensure bastion machine is logged in to inspect image digest
  shell: |
    skopeo login -u {{ registry_user }} -p {{ registry_password }} {{ disconnected_registry_host }}:{{ disconnected_registry_port }}
  when: use_disconnected_registry | default(false)

- name: Determine digest for assisted-installer-controller image
  shell: |
    skopeo inspect docker://{{ disconnected_registry_host }}:{{ disconnected_registry_port }}{{ assisted_installer_controller_image | replace('quay.io','') }} | jq -r .Digest
  register: assisted_installer_controller_image_digest
  when: use_disconnected_registry | default(false)

- name: Create directories for bastion assisted-installer
  file:
    path: "{{ item }}"
    state: directory
  with_items:
  - /opt/assisted-service
  - /opt/assisted-service/data

- name: Create directory for assisted-installer database
  file:
    path: /opt/assisted-service/data/postgresql
    state: directory
    owner: "26"
    recurse: true

- name: Template out assisted-installer files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
  - src: onprem-environment.j2
    dest: /opt/assisted-service/onprem-environment
  - src: nginx-ui.conf
    dest: /opt/assisted-service/nginx-ui.conf

- name: Create assisted-service pod
  containers.podman.podman_pod:
    name: assisted-service
    network: host
    state: started

# On a reboot "started" state does not start an exited pod (why..idk)
- name: Ensure assisted-service pod is up
  containers.podman.podman_pod:
    name: assisted-service
    network: host
    state: restarted

- name: Create database container in assisted-service pod
  containers.podman.podman_container:
    pod: assisted-service
    env_file: /opt/assisted-service/onprem-environment
    volume:
    - /opt/assisted-service/data/postgresql:/var/lib/pgsql
    name: db
    image: "{{ assisted_postgres_image }}"
    state: started

- name: Create assisted installer GUI container in assisted-service pod
  containers.podman.podman_container:
    pod: assisted-service
    network: host
    env_file: /opt/assisted-service/onprem-environment
    volume:
    - /opt/assisted-service/nginx-ui.conf:/opt/bitnami/nginx/conf/server_blocks/nginx.conf
    name: gui
    image: "{{ assisted_installer_ui_image }}"
    state: started

- name: Create assisted installer service container in assisted-service pod
  containers.podman.podman_container:
    pod: assisted-service
    network: host
    env_file: /opt/assisted-service/onprem-environment
    name: service
    image: "{{ assisted_service_image }}"
    env:
      DUMMY_IGNITION: False
    volume:
    - /etc/pki/ca-trust/extracted/pem:/etc/pki/ca-trust/extracted/pem
    state: started

- name: Create assisted image service container in assisted-service pod
  containers.podman.podman_container:
    pod: assisted-service
    network: host
    env_file: /opt/assisted-service/onprem-environment
    name: image-service
    image: "{{ assisted_image_service_image }}"
    env:
      DUMMY_IGNITION: False
    volume:
    - /etc/pki/ca-trust/extracted/pem:/etc/pki/ca-trust/extracted/pem
    state: started
