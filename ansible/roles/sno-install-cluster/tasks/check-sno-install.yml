---
# check-sno-install tasks
#
# For each cluster - Check if cluster completed install
# * If any cluster errors, exit loop
# * If all clusters complete, exit loop
# * If not complete, continue to loop
# Check if any hosts in incorrect boot order state
# Unmount CD and reboot incorrect boot order hosts
# Ensure not to reboot same machine repeatedly
# Repeat loop

- name: Check cluster install task block
  block:
  - name: Increment the retry count
    set_fact:
      retry: "{{ 0 if retry is undefined else retry | int + 1 }}"

  - name: Display the retry count
    debug:
      msg: "Retry number - {{ retry }}"

  - name: Check if cluster(s) are installed
    uri:
      url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v1/clusters/{{ ai_cluster_ids[item].cluster_id }}"
      method: GET
      status_code: [200, 201]
      return_content: true
    register: cluster
    with_items: "{{ ai_cluster_ids }}"
    failed_when: cluster.json.status == 'error' or cluster.json.status == 'cancelled'

  - name: Get hosts for each cluster
    uri:
      url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v1/clusters/{{ item.json.id }}/hosts"
      method: GET
      body_format: json
      status_code: [200]
      return_content: true
    register: get_hosts
    loop: "{{ cluster.results }}"
    loop_control:
      label: "{{ item.json.name }}"
    when: not item.json.status == 'installed'

  - name: Check each cluster's host(s) for incorrect boot order
    include_tasks: check-single-sno-host.yml
    when: cluster_hosts.json is defined
    loop: "{{ get_hosts.results }}"
    loop_control:
      loop_var: cluster_hosts

  - name: Pause during loop
    pause:
      seconds: "{{ check_cluster_pause_seconds }}"

  # - name: Hosts which have had a boot order fix applied
  #   debug:
  #     msg: "{{ boot_order_fixed_hosts }}"

  - name: Fail for a repeat check if cluster(s) are not installed
    fail:
      msg: Cluster(s) not finished installing
    loop: "{{ cluster.results }}"
    loop_control:
      label: "{{ item.json.name }}"
    when: not item.json.status == 'installed'

  rescue:
    - name: Fail on maximum retry count
      fail:
        msg: Maximum retries reached
      when: retry | int == 540

    - name: Fail when a cluster install failed
      fail:
        msg: Cluster install failed or cancelled
      loop: "{{ cluster.results }}"
      loop_control:
        label: "{{ item.json.name }}"
      when: item.json.status == 'error' or item.json.status == 'cancelled'

    - name: Retry the check sno install tasks
      include_tasks: check-sno-install.yml
