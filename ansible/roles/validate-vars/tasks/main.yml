---
# validate-vars tasks

- name: Validate lab
  fail:
    msg: "Invalid lab selected('{{ lab }}') Select from {{ rh_labs }}, {{ cloud_labs }} and 'byol'"
  when:
  - lab not in rh_labs
  - lab not in cloud_labs
  - lab != "byol"

- name: Check pull secret var is set
  fail:
    msg: "Pull secret appears unset"
  when: pull_secret is not defined

- name: Validate ocp_build
  fail:
    msg: "Invalid ocp_build selected('{{ ocp_build }}') Select from {{ ocp_build_types }}"
  when: ocp_build not in ocp_build_types

- name: Validate ocp_version
  fail:
    msg: "The version is undefined or empty. Use a value such as 'latest-4.15' or 'latest-4.16' or '4.16.1'."
  when: (ocp_version is undefined) or (ocp_version|length == 0)

- name: Validate public_vlan
  fail:
    msg: "Public vlan can only be set with non-byol Red Hat Labs."
  when: public_vlan and lab == "byol"

- name: Check for RHEL/Centos (Bastion Validation)
  fail:
    msg: "Expecting RHEL or Centos for a Bastion OS"
  when:
  - ansible_facts['distribution'] is defined
  - (ansible_facts['distribution']|lower != "redhat" and ansible_facts['distribution']|lower != "centos")

- name: Check for RHEL 8.6 (Bastion Validation)
  fail:
    msg: "Upgrade to RHEL 8.6 for podman host network"
  when:
  - ansible_facts['distribution'] is defined
  - (ansible_facts['distribution']|lower == "redhat" and ansible_facts['distribution_version'] is version('8.6', '<'))

- name: Set worker_node_count if undefined or empty (mno)
  set_fact:
    worker_node_count: "{{ allocation_node_count - 4 }}"
  when: (cluster_type == "mno") and
        (worker_node_count is undefined or not worker_node_count | int) and
        ansible_play_name != "Create inventory from a lab cloud" and
        ansible_play_name != "Create inventory from ibmcloud hardware"

- name: Check if the required number of nodes exist for mno
  fail:
    msg: "Insufficient number of nodes in your allocation for mno"
  when: (allocation_node_count is defined and cluster_type == "mno") and (worker_node_count | int  > allocation_node_count - 4)

- name: Check if the required number of nodes exist for sno
  fail:
    msg: "Insufficient number of nodes in your allocation for number of SNOs to be deployed"
  when: (allocation_node_count is defined and cluster_type == "sno") and (1 > allocation_node_count | int  - 1)

- name: Validate SNO inventory count equals 1
  fail:
    msg: "Only one SNO should be uncommented in the inventory under '[sno]' per sno-deploy run, currently {{ groups['sno'] | length }} SNO(s) uncommented"
  when:
  - cluster_type == "sno"
  - groups['sno'] is defined
  - groups['sno'] | length != 1

- name: Validate Red Hat lab vars
  when: lab in rh_labs
  block:
  - name: Validate cluster_type
    fail:
      msg: "Invalid cluster_type selected - {{ cluster_type }} Select from {{ rh_lab_cluster_types }}"
    when: cluster_type not in rh_lab_cluster_types

- name: Validate ibmcloud vars
  when: lab in cloud_labs
  block:
  - name: Validate cluster_type
    fail:
      msg: "Invalid cluster_type selected - {{ cluster_type }} Select from {{ ibmcloud_cluster_types }}"
    when: cluster_type not in ibmcloud_cluster_types

- name: Check reserved_cpus var is set
  fail:
    msg: "reserved_cpus is unset"
  when: (cluster_type == "sno") and (du_profile | default(false) | bool) and reserved_cpus is undefined

- name: Check isolated_cpus var is set
  fail:
    msg: "isolated_cpus is unset"
  when: (cluster_type == "sno") and (du_profile | default(false) | bool) and isolated_cpus is undefined

- name: Inventory network_mac parameters have been renamed to mac_address
  fail:
    msg: "Rerun create-inventory to fix this"
  when: hostvars | json_query('(*)[?network_mac]')
