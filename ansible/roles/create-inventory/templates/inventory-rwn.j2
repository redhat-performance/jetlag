[all:vars]
allocation_node_count={{ ocpinventory.json.nodes | length }}

[bastion]
{{ bastion_machine }} ansible_ssh_user=root bmc_address=mgmt-{{ bastion_machine }}

[bastion:vars]
bmc_user={{ bmc_user }}
bmc_password={{ bmc_password }}

[controlplane]
# Network mac is the intended mac address of the private network to use for this cluster
# Lab mac corresponds to the lab dhcp network, we disable the lab network for this type of cluster
{{ controlplane0.split('.')[0] | replace('mgmt-','') }} bmc_address={{ controlplane0 }} network_mac={{ controlplane0_network_mac }} lab_mac={{ controlplane0_lab_mac }} ip={{ controlplane_network | next_nth_usable(5) }} vendor={{ controlplane0_vendor }}
{{ controlplane1.split('.')[0] | replace('mgmt-','') }} bmc_address={{ controlplane1 }} network_mac={{ controlplane1_network_mac }} lab_mac={{ controlplane1_lab_mac }} ip={{ controlplane_network | next_nth_usable(6) }} vendor={{ controlplane1_vendor }}
{{ controlplane2.split('.')[0] | replace('mgmt-','') }} bmc_address={{ controlplane2 }} network_mac={{ controlplane2_network_mac }} lab_mac={{ controlplane2_lab_mac }} ip={{ controlplane_network | next_nth_usable(7) }} vendor={{ controlplane2_vendor }}

[controlplane:vars]
role=master
boot_iso=discovery.iso
bmc_user={{ bmc_user }}
bmc_password={{ bmc_password }}
lab_interface={{ controlplane_lab_interface }}
network_interface={{ controlplane_network_interface }}
network_prefix={{ controlplane_network_prefix }}
gateway={{ controlplane_network_gateway }}
dns1={{ labs[lab]['dns'][0] }}
dns2={{ labs[lab]['dns'][1] | default('') }}

[worker]
# Unused

[worker:vars]
# Unused

[remoteworker]
# Remote Worker Nodes are networked off a separate subnet for each node hence a /30 subnet per
# rwn node.  In the lab case, we use vlans to separate each rwn node and allow the bastion machine
# to route traffic between the control-plane nodes and the remote worker nodes
{% for remoteworker in ocpinventory_rwn_nodes %}
{{ remoteworker.pm_addr.split('.')[0] | replace('mgmt-','') }} bmc_address={{ remoteworker.pm_addr }} network_mac={{ remoteworker.mac[rwn_network_interface_idx] }} network_interface={{ rwn_network_interface }} vlan={{ rwn_vlan_start + loop.index - 1 }} ip={{ rwn_network_start | ipmath(loop.index * 4 - 2) }} gateway={{ rwn_network_start | ipmath(loop.index * 4 - 3) }} vendor={{ hw_vendor[(remoteworker.pm_addr.split('.')[0]).split('-')[-1]] }}
{% endfor %}

[remoteworker:vars]
role=worker
boot_iso=rwn-worker.iso
bmc_user={{ bmc_user }}
bmc_password={{ bmc_password }}
network_prefix={{ rwn_network_prefix }}
network_mask={{ rwn_network_mask }}
dns1={{ labs[lab]['dns'][0] }}
dns2={{ labs[lab]['dns'][1] | default('') }}

[sno]
# Unused

[sno:vars]
# Unused

[hv]
{% for hv in ocpinventory_hv_nodes %}
{{ hv.pm_addr | replace('mgmt-','') }} bmc_address={{ hv.pm_addr }} vendor={{ hw_vendor[(hv.pm_addr.split('.')[0]).split('-')[-1]] }} impaired_nic={{ hw_nic_name[lab][(hv.pm_addr.split('.')[0]).split('-')[-1]][hypervisor_nic_interface_idx] if lab == 'scalelab' }}
{% endfor %}

[hv:vars]
ansible_user=root
ansible_ssh_pass={{ hv_ssh_pass }}
bmc_user={{ bmc_user }}
bmc_password={{ bmc_password }}
