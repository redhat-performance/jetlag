---
{% if siteconfig_map_site_data %}
apiVersion: ran.openshift.io/v2
{% else %}
apiVersion: ran.openshift.io/v1
{% endif %}
kind: SiteConfig
metadata:
  name: compact-{{ '%05d' | format(item) }}
  namespace: compact-{{ '%05d' | format(item) }}
spec:
  baseDomain: {{ hostvars[groups['hv_vm'][((item - 1) * compact_cluster_node_count)]]['base_domain'] }}
  pullSecretRef:
    name: "assisted-deployment-pull-secret"
  clusterImageSetNameRef: {{ cluster_image_set }}
  sshPublicKey: {{ lookup('file', ssh_public_key_file) }}
  clusters:
  - clusterName: compact-{{ '%05d' | format(item) }}
    networkType: "OVNKubernetes"
    extraManifestPath: extra-manifests
{% if siteconfig_exclude_sync_time_once %}
    extraManifests:
      filter:
        inclusionDefault: include
        exclude:
        - 99-sync-time-once-master.yaml
        - 99-sync-time-once-worker.yaml
{% endif %}
{% if siteconfig_fips %}
    installConfigOverrides: '{ "fips": true }'
{% endif %}
    clusterLabels:
      common: 'true'
      common-mno: 'true'
      group-du-3node: ''
      name: compact-{{ '%05d' | format(item) }}
{% if siteconfig_observability %}
      observability: enabled
{% else %}
      observability: disabled
{% endif %}
      sites: compact-{{ '%05d' | format(item) }}
      vendor: OpenShift
    clusterNetwork:
    - cidr: {{ "fd01::/48" if hostvars[groups['hv_vm'][((item - 1) * compact_cluster_node_count)]]['hv_ip'] | ansible.utils.ipv6 else "10.128.0.0/14" }}
      hostPrefix: {{ compact_cluster_network_host_prefix }}
    apiVIP: {{ hostvars[groups['hv_vm'][0]]['machine_network'] | ansible.utils.nthhost((item + compact_cluster_offset) * -2) }}
    ingressVIP: {{ hostvars[groups['hv_vm'][0]]['machine_network'] | ansible.utils.nthhost( ((item + compact_cluster_offset) * -2) - 1) }}
    machineNetwork:
    - cidr: {{  hostvars[groups['hv_vm'][((item - 1) * compact_cluster_node_count)]]['machine_network'] }}
    serviceNetwork:
    - {{ "fd02::/112" if hostvars[groups['hv_vm'][((item - 1) * compact_cluster_node_count)]]['hv_ip'] | ansible.utils.ipv6 else "172.30.0.0/16" }}
    additionalNTPSources:
    - {{ hostvars[groups['hv_vm'][((item - 1) * compact_cluster_node_count)]]['hv_ip'] }}
    crTemplates:
{% if siteconfig_baremetalhost_override_converged_flow %}
      BareMetalHost: "BareMetalHostOverride.yaml"
{% endif %}
      KlusterletAddonConfig: "KlusterletAddonConfigOverride.yaml"
{% if siteconfig_map_site_data %}
    siteConfigMap:
      name: site-compact-{{ '%05d' | format(item) }}
      namespace: {{ siteconfig_site_data_namespace }}
      data:
        sitekey1: "sitevalue1"
        sitekey2: "sitevalue2"
        sitekey3: "sitevalue3"
        sitekey4: "sitevalue4"
{% endif %}
    nodes:
# "{{ (((item - 1) * compact_cluster_node_count) + sno_cluster_count) }} until {{ ((item * compact_cluster_node_count) - 1 + sno_cluster_count) }}"
{% for vm in range(((item - 1) * compact_cluster_node_count) + sno_cluster_count, (item * compact_cluster_node_count) + sno_cluster_count, 1) %}
    - hostName: "{{ groups['hv_vm'][vm] }}"
      # role: "master"
{% if siteconfig_ironic_inspect %}
      ironicInspect: enabled
{% else %}
      ironicInspect: disabled
{% endif %}
{% if hostvars[groups['hv_vm'][vm]]['hv_ip'] | ansible.utils.ipv6 %}
      bmcAddress: redfish-virtualmedia+http://[{{ hostvars[groups['hv_vm'][vm]]['hv_ip'] }}]:9000/redfish/v1/Systems/{{ hostvars[groups['hv_vm'][vm]]['domain_uuid'] }}
{% else %}
      bmcAddress: redfish-virtualmedia+http://{{ hostvars[groups['hv_vm'][vm]]['hv_ip'] }}:9000/redfish/v1/Systems/{{ hostvars[groups['hv_vm'][vm]]['domain_uuid'] }}
{% endif %}
      bmcCredentialsName:
        name: {{ groups['hv_vm'][vm] }}-bmc-secret
      bootMACAddress: {{ hostvars[groups['hv_vm'][vm]]['mac_address'] }}
      bootMode: "UEFI"
      # rootDeviceHints:
      #   hctl: '0:0:0:0'
{% if siteconfig_enable_cpuset %}
      cpuset: "{{ siteconfig_cpuset }}"
{% else %}
      # cpuset: "{{ siteconfig_cpuset }}"
{% endif %}
      nodeNetwork:
        interfaces:
        - name: {{ vm_nic_interface }}
          macAddress: {{ hostvars[groups['hv_vm'][vm]]['mac_address'] }}
        config:
          interfaces:
          - name: {{ vm_nic_interface }}
            type: ethernet
            state: up
{% if hostvars[groups['hv_vm'][vm]]['hv_ip'] | ansible.utils.ipv4 %}
            ipv4:
              enabled: true
              autoconf: false
              dhcp: false
              address:
              - ip: "{{ hostvars[groups['hv_vm'][vm]]['ip'] }}"
                prefix-length: {{ hostvars[groups['hv_vm'][vm]]['network_prefix'] }}
            ipv6:
              enabled: false
{% else %}
            ipv4:
              enabled: false
            ipv6:
              enabled: true
              autoconf: false
              dhcp: false
              address:
              - ip: "{{ hostvars[groups['hv_vm'][vm]]['ip'] }}"
                prefix-length: {{ hostvars[groups['hv_vm'][vm]]['network_prefix'] }}
{% endif %}
          dns-resolver:
            config:
              server:
              - {{ hostvars[groups['hv_vm'][vm]]['hv_ip'] }}
          routes:
            config:
            - destination: {{ "::/0" if hostvars[groups['hv_vm'][vm]]['hv_ip'] | ansible.utils.ipv6 else "0.0.0.0/0" }}
              next-hop-interface: {{ vm_nic_interface }}
              next-hop-address: {{ hostvars[groups['hv_vm'][vm]]['gateway'] }}
              table-id: 254
{% endfor %}
