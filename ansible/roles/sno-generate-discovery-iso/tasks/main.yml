---
# sno-generate-discovery-iso tasks

- block:
  - name: Generate a discovery ISO
    uri:
      url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v1/clusters/{{ item.value.cluster_id }}/downloads/image"
      method: POST
      body_format: json
      status_code: [201]
      return_content: true
      body: { "ssh_public_key": "{{ lookup('file', ssh_public_key_file) }}", "image_type": "full-iso" }
    register: http_reply
    loop: "{{ ai_cluster_ids | dict2items  }}"

  - name: Download discovery ISO
    get_url:
      url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v1/clusters/{{ item.value.cluster_id }}/downloads/image"
      dest: "{{ http_store_path }}/data/{{ item.value.cluster_name }}.iso"
    loop: "{{ ai_cluster_ids | dict2items  }}"

  - name: Symlink for discovery ISO into /iso directory
    ansible.builtin.file:
      src: "../{{ item.value.cluster_name }}.iso"
      dest: "{{ http_store_path }}/data/iso/{{ item.value.cluster_name }}.iso"
      state: link
    loop: "{{ ai_cluster_ids | dict2items  }}"
  when:
    - not public_vlan | bool

- name: Include custom static network config
  include_tasks: 10_custom_iso.yml
  when:
    - public_vlan | bool
  loop: "{{ groups['sno'][:sno_node_count|int] }}"
