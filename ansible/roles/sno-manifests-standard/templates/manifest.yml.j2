---
# 00-namespace
# 02-image-pull-secret
# 03-clusterdeployment
# 04-agentclusterinstall
# 05-klusterletaddonconfig
# 06-managedcluster
# 07-infraenv
# 01-bmc-secret
# 08-bmh
# 09-nmstate
#
apiVersion: v1
kind: Namespace
metadata:
  name: standard-{{ '%05d' | format(item) }}
  labels:
    name: standard-{{ '%05d' | format(item) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: assisted-deployment-pull-secret
  namespace: standard-{{ '%05d' | format(item) }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ pull_secret }}
---
apiVersion: hive.openshift.io/v1
kind: ClusterDeployment
metadata:
  name: standard-{{ '%05d' | format(item) }}
  namespace: standard-{{ '%05d' | format(item) }}
spec:
  baseDomain: {{ hostvars[groups['hv'][((item - 1) * standard_cluster_node_count)]]['base_domain'] }}
  clusterInstallRef:
    group: extensions.hive.openshift.io
    kind: AgentClusterInstall
    name: standard-{{ '%05d' | format(item) }}
    version: v1beta1
  clusterName: standard-{{ '%05d' | format(item) }}
  platform:
    agentBareMetal:
      agentSelector:
        matchLabels:
          cluster-name: standard-{{ '%05d' | format(item) }}
  pullSecretRef:
    name: assisted-deployment-pull-secret
---
apiVersion: extensions.hive.openshift.io/v1beta1
kind: AgentClusterInstall
metadata:
  annotations:
    agent-install.openshift.io/install-config-overrides: '{"networking":{"networkType":"OVNKubernetes"}}'
  name: standard-{{ '%05d' | format(item) }}
  namespace: standard-{{ '%05d' | format(item) }}
spec:
  apiVIP: {{ hostvars[groups['hv'][0]]['machine_network'] | ansible.utils.nthhost(item * -2) }}
  clusterDeploymentRef:
    name: standard-{{ '%05d' | format(item) }}
  imageSetRef:
    name: {{ cluster_image_set }}
  ingressVIP: {{ hostvars[groups['hv'][0]]['machine_network'] | ansible.utils.nthhost( (item * -2) - 1) }}
  networking:
    clusterNetwork:
      - cidr: {{ "fd01::/48" if hostvars[groups['hv'][((item - 1) * standard_cluster_node_count)]]['ip'] | ansible.utils.ipv6 else "10.128.0.0/14" }}
        hostPrefix: {{ standard_cluster_network_host_prefix }}
    machineNetwork:
      - cidr: {{  hostvars[groups['hv'][((item - 1) * standard_cluster_node_count)]]['machine_network'] }}
    serviceNetwork:
      - {{ "fd02::/112" if hostvars[groups['hv'][((item - 1) * standard_cluster_node_count)]]['ip'] | ansible.utils.ipv6 else "172.30.0.0/16" }}
  provisionRequirements:
    controlPlaneAgents: 3
    workerAgents: {{ standard_cluster_node_count - 3 }}
  sshPublicKey: {{ lookup('file', ssh_public_key_file) }}
  compute:
  - hyperthreading: Enabled
    name: worker
  controlPlane:
    hyperthreading: Enabled
    name: master
{% if hv_vm_manifest_acm_cr %}
---
apiVersion: agent.open-cluster-management.io/v1
kind: KlusterletAddonConfig
metadata:
  name: standard-{{ '%05d' | format(item) }}
  namespace: standard-{{ '%05d' | format(item) }}
spec:
  clusterName: standard-{{ '%05d' | format(item) }}
  clusterNamespace: standard-{{ '%05d' | format(item) }}
  clusterLabels:
    cloud: auto-detect
    vendor: auto-detect
  applicationManager:
    enabled: false
  certPolicyController:
    enabled: false
  iamPolicyController:
    enabled: false
  policyController:
    enabled: true
  searchCollector:
    enabled: {{  manifest_searchcollector_enabled }}
---
apiVersion: cluster.open-cluster-management.io/v1
kind: ManagedCluster
metadata:
  name: standard-{{ '%05d' | format(item) }}
  labels:
    name: standard-{{ '%05d' | format(item) }}
    vendor: OpenShift
{% if manifest_observability %}
    observability: enabled
{% else %}
    observability: disabled
{% endif %}
    common: "true"
    group-du-standard: ""
spec:
  hubAcceptsClient: true
{% endif %}
---
apiVersion: agent-install.openshift.io/v1beta1
kind: InfraEnv
metadata:
  name: standard-{{ '%05d' | format(item) }}
  namespace: standard-{{ '%05d' | format(item) }}
spec:
  additionalNTPSources:
  - {{ hostvars[groups['hv'][((item - 1) * standard_cluster_node_count)]]['ip'] }}
  clusterRef:
    name: standard-{{ '%05d' | format(item) }}
    namespace: standard-{{ '%05d' | format(item) }}
  sshAuthorizedKey: {{ lookup('file', ssh_public_key_file) }}
  agentLabelSelector:
    matchLabels:
      cluster-name: standard-{{ '%05d' | format(item) }}
  pullSecretRef:
    name: assisted-deployment-pull-secret
{% if setup_hv_vm_dhcp %}
  # nmStateConfigLabelSelector:
  #   matchLabels:
  #     cluster: standard-{{ '%05d' | format(item) }}
{% else %}
  nmStateConfigLabelSelector:
    matchLabels:
      cluster: standard-{{ '%05d' | format(item) }}
{% endif %}
# "{{ ((item - 1) * standard_cluster_node_count) }} until {{ (item * standard_cluster_node_count) - 1 }}"
{% for vm in range(((item - 1) * standard_cluster_node_count), (item * standard_cluster_node_count), 1) %}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ groups['hv'][vm] }}-bmc-secret
  namespace: standard-{{ '%05d' | format(item) }}
type: Opaque
data:
  password: {{ bmc_password_base64 }}
  username: {{ bmc_username_base64 }}
---
apiVersion: metal3.io/v1alpha1
kind: BareMetalHost
metadata:
  name: {{ groups['hv'][vm] }}
  namespace: standard-{{ '%05d' | format(item) }}
  annotations:
    inspect.metal3.io: disabled
    bmac.agent-install.openshift.io/hostname: "{{ groups['hv'][vm] }}"
{% if 'role' in hostvars[groups['hv'][vm]] %}
{% if hostvars[groups['hv'][vm]]['role'] == "master" %}
    bmac.agent-install.openshift.io/role: "master"
{% elif hostvars[groups['hv'][vm]]['role'] == "infra" %}
    bmac.agent-install.openshift.io.node-label.node-role.kubernetes.io/infra: ""
{% endif %}
{% endif %}
  labels:
    infraenvs.agent-install.openshift.io: "standard-{{ '%05d' | format(item) }}"
spec:
  bootMode: "UEFI"
  bmc:
{% if hostvars[groups['hv'][vm]]['bmc_address'] | ansible.utils.ipv6 %}
    address: redfish-virtualmedia+https://[{{ hostvars[groups['hv'][vm]]['bmc_address'] }}]/redfish/v1/Systems/System.Embedded.1/
{% else %}
    address: redfish-virtualmedia+https://{{ hostvars[groups['hv'][vm]]['bmc_address'] }}/redfish/v1/Systems/System.Embedded.1/
{% endif %}
    disableCertificateVerification: true
    credentialsName: {{ groups['hv'][vm] }}-bmc-secret
  bootMACAddress: {{ hostvars[groups['hv'][vm]]['mac_address'] }}
  automatedCleaningMode: disabled
  online: true
{% if setup_hv_vm_dhcp %}
# ---
# apiVersion: agent-install.openshift.io/v1beta1
# kind: NMStateConfig
# metadata:
#   name: {{ groups['hv'][vm] }}
#   namespace: standard-{{ '%05d' | format(item) }}
#   labels:
#     cluster: standard-{{ '%05d' | format(item) }}
# spec:
#   config:
#     interfaces:
#     - name: enp1s0
#       type: ethernet
#       state: up
#       {{ "ipv6" if hostvars[groups['hv'][vm]]['ip'] | ansible.utils.ipv6 else "ipv4" }}:
#         enabled: true
#         address:
#         - ip: {{ hostvars[groups['hv'][vm]]['ip'] }}
#           prefix-length: {{ hostvars[groups['hv'][vm]]['network_prefix'] }}
#         dhcp: false
#     dns-resolver:
#       config:
#         server:
#         - {{ hostvars[groups['hv'][vm]]['ip'] }}
#     routes:
#       config:
#       - destination: {{ "::/0" if hostvars[groups['hv'][vm]]['ip'] | ansible.utils.ipv6 else "0.0.0.0/0" }}
#         metric: 1
#         next-hop-address: {{ hostvars[groups['hv'][vm]]['gateway'] }}
#         next-hop-interface: enp1s0
#         table-id: 254
#   interfaces:
#   - name: "enp1s0"
#     macAddress: {{ hostvars[groups['hv'][vm]]['mac_address'] }}
{% else %}
---
apiVersion: agent-install.openshift.io/v1beta1
kind: NMStateConfig
metadata:
  name: {{ groups['hv'][vm] }}
  namespace: standard-{{ '%05d' | format(item) }}
  labels:
    cluster: standard-{{ '%05d' | format(item) }}
spec:
  config:
    interfaces:
    - name: enp1s0
      type: ethernet
      state: up
      {{ "ipv6" if hostvars[groups['hv'][vm]]['ip'] | ansible.utils.ipv6 else "ipv4" }}:
        enabled: true
        address:
        - ip: {{ hostvars[groups['hv'][vm]]['ip'] }}
          prefix-length: {{ hostvars[groups['hv'][vm]]['network_prefix'] }}
        dhcp: false
    dns-resolver:
      config:
        server:
        - {{ hostvars[groups['hv'][vm]]['ip'] }}
    routes:
      config:
      - destination: {{ "::/0" if hostvars[groups['hv'][vm]]['ip'] | ansible.utils.ipv6 else "0.0.0.0/0" }}
        metric: 1
        next-hop-address: {{ hostvars[groups['hv'][vm]]['gateway'] }}
        next-hop-interface: enp1s0
        table-id: 254
  interfaces:
  - name: "enp1s0"
    macAddress: {{ hostvars[groups['hv'][vm]]['mac_address'] }}
{% endif %}
{% endfor %}
