---
# hv-install tasks

- name: Install packages
  dnf:
    name:
    - "@virtualization-host-environment"
    - virt-install
    - virt-viewer
    - gcc
    - python3-devel
    - python3-libvirt
    - rsync
    - ksmtuned
    state: present
    update_cache: true
    disable_gpg_check: yes

- name: Install python packages
  pip:
    name: sushy-tools
    version: 1.2.0

- name: Configure hugepages support
  when: enable_hugepages
  block:
  - name: Read current grub configuration
    slurp:
      src: "{{ grub_config_file }}"
    register: current_grub_config

  - name: Parse current GRUB_CMDLINE_LINUX
    set_fact:
      current_cmdline: "{{ (current_grub_config.content | b64decode | regex_search('GRUB_CMDLINE_LINUX=\"([^\"]+)\"', '\\1') | first) | default('') }}"

  - name: Build hugepages kernel parameters
    set_fact:
      hugepage_params: "hugepagesz={{ hugepage_size }} hugepages={{ hugepage_count }}"

  - name: Build complete kernel command line
    set_fact:
      new_cmdline: "{{ ([current_cmdline] + [hugepage_params] + additional_kernel_params) | reject('equalto', '') | join(' ') }}"

  - name: Update grub configuration for hugepages
    lineinfile:
      path: "{{ grub_config_file }}"
      regexp: '^GRUB_CMDLINE_LINUX='
      line: 'GRUB_CMDLINE_LINUX="{{ new_cmdline }}"'
      backup: true
    register: grub_updated

  - name: Regenerate grub configuration
    command: grub2-mkconfig -o /boot/grub2/grub.cfg
    when: grub_updated.changed

  - name: Set reboot required flag
    set_fact:
      hugepages_reboot_required: true
    when: grub_updated.changed

- name: Get coredns
  get_url:
    validate_certs: false
    force: true
    url: https://github.com/coredns/coredns/releases/download/v1.10.1/coredns_1.10.1_linux_amd64.tgz
    dest: /root/coredns_1.10.1_linux_amd64.tgz

- name: Untar coredns
  unarchive:
    src: /root/coredns_1.10.1_linux_amd64.tgz
    dest: /usr/local/bin
    remote_src: yes
    mode: 0700

- name: Setup chronyd
  template:
    src: chrony.conf.j2
    dest: /etc/chrony.conf
    backup: true
    mode: "0644"

- name: Ensure chronyd is running with new configuration
  systemd:
    state: restarted
    enabled: true
    name: chronyd

- name: Copying the public key to the root user's authorized_keys
  authorized_key:
    user: root
    state: present
    key: "{{ lookup('file', '{{ ssh_public_key_file }}') }}"

- name: Start and enable KSM
  systemd:
    state: started
    enabled: true
    name: ksm

- name: Start and enable KSMtuned
  systemd:
    state: started
    enabled: true
    name: ksmtuned

- name: Reboot hypervisor for hugepages configuration
  when: 
  - enable_hugepages
  - hugepages_reboot_required | default(false)
  block:
  - name: Reboot hypervisor
    reboot:
      msg: "Rebooting to apply hugepages configuration"
      reboot_timeout: 600
      
  - name: Verify hugepages are configured
    shell: cat /proc/meminfo | grep -E "HugePages_Total|HugePages_Free|Hugepagesize"
    register: hugepages_status
    
  - name: Display hugepages status
    debug:
      msg: "{{ hugepages_status.stdout_lines }}"
