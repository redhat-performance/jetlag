---
apiVersion: ran.openshift.io/v1
kind: SiteConfig
metadata:
  name: {{ inventory_hostname }}
  namespace: {{ inventory_hostname }}
spec:
  baseDomain: {{ hostvars[inventory_hostname]['base_domain'] }}
  pullSecretRef:
    name: "assisted-deployment-pull-secret"
  clusterImageSetNameRef: {{ cluster_image_set }}
  sshPublicKey: {{ lookup('file', ssh_public_key_file) }}
  clusters:
  - clusterName: {{ inventory_hostname }}
    networkType: "OVNKubernetes"
    clusterLabels:
      common: 'true'
      group-du-sno: ''
      name: {{ inventory_hostname }}
      sites: {{ inventory_hostname }}
      vendor: OpenShift
{% if siteconfig_observability %}
      observability: enabled
{% else %}
      observability: disabled
{% endif %}
    clusterNetwork:
    - cidr: {{ "fd01::/48" if hostvars[inventory_hostname]['ip'] | ansible.utils.ipv6 else "10.128.0.0/14" }}
      hostPrefix: {{  hostvars[inventory_hostname]['network_prefix']  }}
    machineNetwork:
    - cidr: {{ hostvars[inventory_hostname]['machine_network'] }}
    serviceNetwork:
    - {{ "fd02::/112" if hostvars[inventory_hostname]['ip'] | ansible.utils.ipv6 else "172.30.0.0/16" }}
    additionalNTPSources:
    - {{ hostvars[inventory_hostname]['hv_ip'] }}
    crTemplates:
{% if siteconfig_baremetalhost_override_converged_flow %}
      BareMetalHost: "BareMetalHostOverride.yaml"
{% endif %}
      KlusterletAddonConfig: "KlusterletAddonConfigOverride.yaml"
    nodes:
    - hostName: "{{ inventory_hostname }}"
      bmcAddress: redfish-virtualmedia+http://[{{ hostvars[inventory_hostname]['hv_ip'] }}]:9000/redfish/v1/Systems/{{ hostvars[inventory_hostname]['domain_uuid'] }}
      bmcCredentialsName:
        name: {{ inventory_hostname }}-bmc-secret
      bootMACAddress: {{ hostvars[inventory_hostname]['mac_address'] }}
      bootMode: "UEFI"
      # rootDeviceHints:
      #   hctl: '0:0:0:0'
{% if siteconfig_enable_cpuset %}
      cpuset: "{{ siteconfig_cpuset }}"
{% else %}
      # cpuset: "{{ siteconfig_cpuset }}"
{% endif %}
      nodeNetwork:
        interfaces:
        - name: eno1
          macAddress: {{ hostvars[inventory_hostname]['mac_address'] }}
        config:
          interfaces:
          - name: eno1
            type: ethernet
            state: up
            macAddress: {{ hostvars[inventory_hostname]['mac_address'] }}
{% if hostvars[inventory_hostname]['ip'] | ansible.utils.ipv4 %}
            ipv4:
              enabled: true
              address:
              - ip: "{{ hostvars[inventory_hostname]['ip'] }}"
                prefix-length: {{ hostvars[inventory_hostname]['network_prefix'] }}
            ipv6:
              enabled: false
{% else %}
            ipv4:
              enabled: false
            ipv6:
              enabled: true
              address:
              - ip: "{{ hostvars[inventory_hostname]['ip'] }}"
                prefix-length: {{ hostvars[inventory_hostname]['network_prefix'] }}
{% endif %}
          dns-resolver:
            config:
              # search:
              # - clus2.t5g.lab.eng.bos.redhat.com
              server:
              - {{ hostvars[inventory_hostname]['hv_ip'] }}
          routes:
            config:
            - destination: {{ "::/0" if hostvars[inventory_hostname]['ip'] | ansible.utils.ipv6 else "0.0.0.0/0" }}
              next-hop-interface: eno1
              next-hop-address: {{ hostvars[inventory_hostname]['gateway'] }}
              table-id: 254
