# Jetlag HV CoreDNS Configuration
. {
    errors
    # log
{% if bastion_controlplane_ip | ansible.utils.ipv4 %}
    forward . {{ labs[lab]['dns'][0] }}
{% endif %}
    cache 30
    reload

    # Bastion/API/VM/Compact/Standard resolution
    hosts {
        # Bastion
        {{ bastion_controlplane_ip }} {{ groups['bastion'][0] }}

        # Cluster API
        {{ controlplane_network_api }} api.{{ cluster_name }}.{{ base_dns_name }}

        # VM
{% for vm in groups['hv_vm'] %}
        {{ hostvars[vm].ip }} {{ vm }}
        {{ hostvars[vm].ip }} api.{{ vm }}.{{ base_dns_name }}
{% endfor %}
{% if groups['hv_vm'] | length > 0 %}

        # jumbocluster00
        {{ hostvars[groups['hv_vm'][0]]['machine_network'] | ansible.utils.nthhost(-2) }} jumbocluster00
        {{ hostvars[groups['hv_vm'][0]]['machine_network'] | ansible.utils.nthhost(-2) }} api.jumbocluster00.{{ base_dns_name }}

        # Standard cluster DNS ({{ standard_cluster_dns_count }} Entries)
{% for cluster in range(1, standard_cluster_dns_count + 1, 1)  %}
        {{ hostvars[groups['hv_vm'][0]]['machine_network'] | ansible.utils.nthhost(cluster * -2) }} standard-{{ '%05d' | format(cluster) }}
        {{ hostvars[groups['hv_vm'][0]]['machine_network'] | ansible.utils.nthhost(cluster * -2) }} api.standard-{{ '%05d' | format(cluster) }}.{{ base_dns_name }}
{% endfor %}

        # Compact cluster DNS ({{ compact_cluster_dns_count }} Entries)
{% for cluster in range(1, compact_cluster_dns_count + 1, 1)  %}
        {{ hostvars[groups['hv_vm'][0]]['machine_network'] | ansible.utils.nthhost((cluster + standard_cluster_dns_count) * -2) }} compact-{{ '%05d' | format(cluster) }}
        {{ hostvars[groups['hv_vm'][0]]['machine_network'] | ansible.utils.nthhost((cluster + standard_cluster_dns_count) * -2) }} api.compact-{{ '%05d' | format(cluster) }}.{{ base_dns_name }}
{% endfor %}
{% endif %}
        fallthrough
    }

    # *.apps All Clusters
{% if bastion_controlplane_ip | ansible.utils.ipv6 %}
    # *.apps for hub cluster
    template IN AAAA {{ cluster_name }}.{{ base_dns_name }} {
        match .*.apps.{{ cluster_name }}.{{ base_dns_name }}
        answer "{%raw%}{{ .Name }} 60 in {{ .Type }}{%endraw%} {{ controlplane_network_ingress }}"
        fallthrough
    }

    # *.apps for VMs
{% for vm in groups['hv_vm'] %}
    template IN AAAA {{ vm }}.{{ base_dns_name }} {
        match .*.apps.{{ vm }}.{{ base_dns_name }}
        answer "{%raw%}{{ .Name }} 60 in {{ .Type }}{%endraw%} {{ hostvars[vm].ip }}"
        fallthrough
    }
{% endfor %}
{% if groups['hv_vm'] | length > 0 %}

    # *.apps for jumbocluster00
    template IN AAAA jumbocluster00.{{ base_dns_name }} {
        match .*.apps.jumbocluster00.{{ base_dns_name }}
        answer "{%raw%}{{ .Name }} 60 in {{ .Type }}{%endraw%} {{ hostvars[groups['hv_vm'][0]]['machine_network'] | ansible.utils.nthhost(-3) }}"
        fallthrough
    }

    # *.apps for standard clusters
{% for cluster in range(1, standard_cluster_dns_count + 1, 1)  %}
    template IN AAAA standard-{{ '%05d' | format(cluster) }}.{{ base_dns_name }} {
        match .*.apps.standard-{{ '%05d' | format(cluster) }}.{{ base_dns_name }}
        answer "{%raw%}{{ .Name }} 60 in {{ .Type }}{%endraw%} {{ hostvars[groups['hv_vm'][0]]['machine_network'] | ansible.utils.nthhost( (cluster * -2) - 1 ) }}"
        fallthrough
    }
{% endfor %}

    # *.apps for compact clusters
{% for cluster in range(1, compact_cluster_dns_count + 1, 1)  %}
    template IN AAAA compact-{{ '%05d' | format(cluster) }}.{{ base_dns_name }} {
        match .*.apps.compact-{{ '%05d' | format(cluster) }}.{{ base_dns_name }}
        answer "{%raw%}{{ .Name }} 60 in {{ .Type }}{%endraw%} {{ hostvars[groups['hv_vm'][0]]['machine_network'] | ansible.utils.nthhost( ((cluster + standard_cluster_dns_count) * -2) - 1 ) }}"
        fallthrough
    }
{% endfor %}
{% endif %}
{% else %}

    # *.apps for hub cluster
    template IN A {{ cluster_name }}.{{ base_dns_name }} {
        match .*.apps.{{ cluster_name }}.{{ base_dns_name }}
        answer "{%raw%}{{ .Name }} 60 in {{ .Type }}{%endraw%} {{ controlplane_network_ingress }}"
        fallthrough
    }

    # *.apps for VMs
{% for vm in groups['hv_vm'] %}
    template IN A {{ vm }}.{{ base_dns_name }} {
        match .*.apps.{{ vm }}.{{ base_dns_name }}
        answer "{%raw%}{{ .Name }} 60 in {{ .Type }}{%endraw%} {{ hostvars[vm].ip }}"
        fallthrough
    }
{% endfor %}
{% if groups['hv_vm'] | length > 0 %}

    # *.apps for jumbocluster00
    template IN A jumbocluster00.{{ base_dns_name }} {
        match .*.apps.jumbocluster00.{{ base_dns_name }}
        answer "{%raw%}{{ .Name }} 60 in {{ .Type }}{%endraw%} {{ hostvars[groups['hv_vm'][0]]['machine_network'] | ansible.utils.nthhost(-3) }}"
        fallthrough
    }

    # *.apps for standard clusters
{% for cluster in range(1, standard_cluster_dns_count + 1, 1)  %}
    template IN AAAA standard-{{ '%05d' | format(cluster) }}.{{ base_dns_name }} {
        match .*.apps.standard-{{ '%05d' | format(cluster) }}.{{ base_dns_name }}
        answer "{%raw%}{{ .Name }} 60 in {{ .Type }}{%endraw%} {{ hostvars[groups['hv_vm'][0]]['machine_network'] | ansible.utils.nthhost( (cluster * -2) - 1 ) }}"
        fallthrough
    }
{% endfor %}

    # *.apps for compact clusters
{% for cluster in range(1, compact_cluster_dns_count + 1, 1)  %}
    template IN AAAA compact-{{ '%05d' | format(cluster) }}.{{ base_dns_name }} {
        match .*.apps.compact-{{ '%05d' | format(cluster) }}.{{ base_dns_name }}
        answer "{%raw%}{{ .Name }} 60 in {{ .Type }}{%endraw%} {{ hostvars[groups['hv_vm'][0]]['machine_network'] | ansible.utils.nthhost( ((cluster + standard_cluster_dns_count) * -2) - 1 ) }}"
        fallthrough
    }
{% endfor %}
{% endif %}
{% endif %}
}
