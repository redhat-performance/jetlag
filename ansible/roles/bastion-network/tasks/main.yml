---
# bastion-network tasks

- name: Stop and disable iptables
  systemd:
    state: stopped
    enabled: false
    name: iptables

- name: Set ipv4 sysctl
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    sysctl_set: true
    sysctl_file: /etc/sysctl.d/ipv4.forward.conf
    state: present
    reload: true

- name: Comment out scale lab injected ipv6 disabling
  replace:
    path: /etc/sysctl.conf
    regexp: "net.ipv6.conf.all.disable_ipv6 = 1"
    replace: "# net.ipv6.conf.all.disable_ipv6 = 1"
    backup: true

- name: Set ipv6 sysctl
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: true
    sysctl_file: /etc/sysctl.d/ipv6.conf
    state: present
    reload: true
  loop:
  - name: net.ipv6.conf.all.forwarding
    value: "1"
  - name: net.ipv6.conf.all.disable_ipv6
    value: "0"
  when:  bastion_controlplane_ip | ansible.netcommon.ipv6

- name: Allow natted traffic through bastion lab interface
  shell: |
    iptables -t nat -A POSTROUTING -o {{ bastion_lab_interface }} -j MASQUERADE

- name: Configure frr routing daemons
  lineinfile:
    path: /etc/frr/daemons
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
  - regexp: ^zebra=
    line: zebra=yes
  - regexp: ^bgpd=
    line: bgpd=yes
  - regexp: ^pbrd=
    line: pbrd=yes
  - regexp: ^staticd=
    line: staticd=yes

- name: Start and enable frr routing
  systemd:
    state: started
    enabled: true
    name: frr

# Connections can end up named "Wired Connection X" and prevent the bastion controlplane interface from being configured
- name: Get NetworkManager connection name for bastion control-plane interface
  shell: |
    nmcli d show {{ bastion_controlplane_interface }} | grep "GENERAL.CONNECTION:" | sed 's/GENERAL.CONNECTION://g' | xargs
  register: cp_int_nmcli

- name: Disable original bastion control-plane connection to allow reconfiguration
  nmcli:
    type: ethernet
    conn_name: "{{ cp_int_nmcli.stdout }}"
    state: absent

- name: Setup bastion on control-plane network (ipv4)
  nmcli:
    type: ethernet
    conn_name: "{{ bastion_controlplane_interface }}"
    ifname: "{{ bastion_controlplane_interface }}"
    ip4: "{{ bastion_controlplane_ip }}/{{ controlplane_network_prefix }}"
    state: present
  when:  bastion_controlplane_ip | ansible.netcommon.ipv4

- name: Setup bastion on control-plane network (ipv6)
  nmcli:
    type: ethernet
    conn_name: "{{ bastion_controlplane_interface }}"
    ifname: "{{ bastion_controlplane_interface }}"
    ip6: "{{ bastion_controlplane_ip }}/{{ controlplane_network_prefix }}"
    state: present
  when:  bastion_controlplane_ip | ansible.netcommon.ipv6

- name: Setup rwn vlaned interfaces
  nmcli:
    type: vlan
    vlandev: "{{ bastion_vlaned_interface }}"
    vlanid: "{{ hostvars[item].vlan }}"
    conn_name: "{{ bastion_vlaned_interface }}.{{ hostvars[item].vlan }}"
    ip4: "{{ hostvars[item].gateway }}/{{ hostvars[item].network_prefix }}"
    state: present
  when: cluster_type == "rwn"
  loop: "{{ groups['remoteworker'] }}"
